FROM golang:1.20-alpine as build

USER root

ENV BIN_FILE=/usr/app/serverapp
ENV CODE_DIR=/go/src/

WORKDIR ${CODE_DIR}

# Кэшируем слои с модулями
COPY go.mod .
COPY go.sum .
RUN go mod download

COPY . ${CODE_DIR}

# Собираем статический бинарник Go (без зависимостей на Си API),
# иначе он не будет работать в alpine образе.
ARG LDFLAGS
RUN CGO_ENABLED=0 go build \
   -ldflags "$LDFLAGS" \
   -o ${BIN_FILE} ${CODE_DIR}/server/server.go

# На выходе тонкий образ
FROM alpine:3.9

ENV BIN_FILE=/usr/app/serverapp
COPY --from=build ${BIN_FILE} ${BIN_FILE}

# ARG CONFIG_FILE ./configs/config.toml
# ENV CONFIG_FILE_DST /etc/calendar/config.toml
# COPY ${CONFIG_FILE} ${CONFIG_FILE_DST}

# CMD ${BIN_FILE} -config ${CONFIG_FILE_DST}
ENTRYPOINT ["./usr/app/serverapp"]